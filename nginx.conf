# Reverse Proxy Gateway server configuration file
# File Author: Roberto Y. Guzm√°n - roberto.guzman3@upr.edu
# 
# When running the reverse proxy gateway container, this file serves as the configuration to redirect requests to the respective services.
# To test the conectivity of particular services, simply comment or uncomment the "location" blocks as needed.
# For any doubts please contact this file author.

events { 
    worker_connections 1024; 
}

http {

    # Log formatting: custom log formating format to log any errors or significant information from the requests that go through the 
    # reverse proxy gateway.
    log_format custom '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"'

    # Access Log Files: Location of the access logs when any entity performs a request to any of the provided endpoins. Uses custom formatting.
    access_log /var/log/nginx/access.log custom;

    # Error Log Files: Location of error logs for nginx when a request process fails.
    error_log /var/log/nginx/error.log;

    # Request Header limiting: Setup max header size for requests
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 64;

    # Client Body Configuration: In the event of recieving large number of request body. Increase according to the max document size.
    client_max_body_size 500M;

    # Server 1,  Port 80 Configuration: Redirects all HTTP traffic to the HTTPS server relative to the specified endpoint locations.
    server {
        gzip on;
        listen 80;
        listen [::]:80;
        server_name test.irene.uprm.edu;

        # Header redirection for SSL server: When a request arrives as a non HTTPS it is automatically redirected to the HTTPS server via port
        # 443. 
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-SSL on;
        proxy_set_header    X-Forwarded-Proto $scheme;

        return 301 https://test.irene.uprm.edu$request_uri;
    }
    
    # Server 2, Port 443 Configuration: The proxy server responsible for redirecting all traffic inside the system using HTTPS protocol and
    # custom SSL certificate to estalish securer communications.
    server {
        # Port Configuraton: Sets all requests under this server to listen to port 443. All requests are to be sent via protocol http2.
        # Also establishes the server name to be used
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name test.irene.uprm.edu; # The server name to be used in the search engines
        
        # SSL Configuration: Establish the ssl certificate and ssl key files used to establish HTTPS communications, ssl session cache
        # accepted TLS communication protocols, and server ciphers. 
        ssl_certificate /etc/nginx/ssl/localhost.crt; # SSL Certificate file location
        ssl_certificate_key /etc/nginx/ssl/localhost.key; # SSL Key file location
        ssl_session_cache    shared:SSL:10m; # SSL session cache.
        ssl_session_timeout  10m; # SSL session cache timeout set to 10 minutes.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Accepted TLS protocols
        ssl_prefer_server_ciphers on; # Enable server 
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';  


        # Header configuration: When performing requests, all header information is proxied to the internal servers.
        proxy_set_header    Host                $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-SSL     on;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    Connection          "upgrade";
        proxy_set_header    Upgrade             $http_upgrade;


        # Request Compression Configuration: When establishing connections to the proxy servers, all responses must be compressed for ease of use
        # and fast response times. It will compress all requests since we have multiple servers being proxied on the system. Establishes the 
        # accepted request types to compress
        gzip on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_types
            text/plain
            text/css
            text/javascript
            application/javascript
            application/x-javascript
            application/xml
            application/json
            application/ld+json;

        
        
        # NGINX DNS Resolver: When services are scaled up, scaled down, added or removed, 
        # the nginx reverse proxy server will make sure to keep track of the changes uses in the network by contacting the 
        # internal network IP 127.0.0.11.
        resolver 127.0.0.11;

        # Gateway Request Timeouts: 
        proxy_connect_timeout 90s;

        proxy_http_version 1.1;

    
        # Notes for adding endpoints: Since the system uses docker-compose as the main
        # DO NOT end a location block  "/" unless is the main route. The nginx DNS resolver will match container names using regex.
        # Add "/" at the end of the endpoint on the proxy_pass declaration 
        
        location / {
            return 301 https://test.irene.uprm.edu/searchspace-ui;
        }

        
        location /admin-ui {
            gzip_static on; # static file compression
            proxy_pass http://admin-ui/; # Proxied endopoint corresponding to the "admin-ui" service in the docker-compose.yml file.
        }

        location /admin-server {
            proxy_pass http://admin-server/; # Proxied endopoint corresponding to the "admin-server" service in the docker-compose.yml file.
        }


        # ################### TELLSPACE ####################
        location /tellspace-ui {
            gzip_static on; # static file compression
            proxy_pass http://tellspace-ui/; # Proxied endopoint corresponding to the "tellspace-ui" service in the docker-compose.yml file.
        }

        location /tellspace-server {
            proxy_pass http://tellspace-server/; # Proxied endopoint corresponding to the "tellspace-server" service in the docker-compose.yml file.
        }

        
        #################### SEARCHSPACE ####################
        location /searchspace-ui {
            gzip_static on; # static file compression
            proxy_pass http://searchspace-ui/; # Proxied endopoint corresponding to the "searchspace-ui" service in the docker-compose.yml file.
        }

        location /searchspace-server {
            proxy_pass http://searchspace-server/; # Proxied endopoint corresponding to the "admin-ui" service in the docker-compose.yml file.
        }
    }
}
