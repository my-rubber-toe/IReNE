# Docker file for a ui application. Ensure that the build script has the following pattern
# "ng build --base-href /<app-name-in-docker-compose.yml>/ --output-path dist --aot --prod"
# If you docker-compose.yml has the name of the ui container as "example-ui", the value for the <app-name-in-docker-compose.yml>
# must be the same. 
#
# Example: For the test application of "angular-ssl", the container name in the docker-compose.yml is "angular-ssl". Thus, the
# build script will be as such: 
# 
# "ng build --base-href /angular-ssl/ --output-path dist --aot --prod"
# 
# This is also used in the reverse proxy config as the "location parameter"
#
# Example: 
# 
# location /angular-ssl {
#    proxy_pass http://angular-ssl/
# }

FROM node:12.6-alpine as build-step
WORKDIR /app
COPY package.json ./
RUN npm install
COPY . .
RUN npm run build

### STAGE 2: NGINX Server Container SETUP ###

FROM nginx:1.16.0-alpine as prod-stage

COPY ./nginx.conf  /etc/nginx/nginx.conf

COPY --from=build-step /app/dist/ /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
